services:
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpassword
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - shared_network

  nodejs-builder:
    build:
        context: ./nodejs-project-builder
        dockerfile: Dockerfile
    container_name: nodejs-builder
    image: imnagaraj/nodejs-builder
    ports:
      - "3000:3000"
    networks:
      - shared_network
    volumes:
      - D:/dockervolumes/project-uploads:/usr/src/app/uploads
  
  p2p-downloader:
    build:
        context: ./p2p-cron-app
        dockerfile: Dockerfile.flask
    container_name: p2p-downloader
    image: imnagaraj/p2p-downloader
    ports:
      - "5000:5000"
    networks:
      - shared_network
    volumes:
      - D:/dockervolumes/downloader:/app/datasource
  
  p2p-cron-app:
    build:
        context: ./p2p-cron-app
        dockerfile: Dockerfile.cron
    container_name: p2p-cron-app
    image: imnagaraj/p2p-cron-app
    networks:
      - shared_network
    volumes:
      - D:/dockervolumes/downloader:/app/datasource
      - D:/dockervolumes/project-uploads:/usr/src/app/uploads
  
  react-app:
    build:
        context: ./reactjs-project-builder-app
        dockerfile: Dockerfile
    container_name: react-app
    image: imnagaraj/react-app
    ports:
      - "3001:80"
    networks:
      - shared_network

volumes:
  mongo-data:
    driver: local

networks:
  shared_network:
    driver: bridge
